{"version":3,"file":"static/js/149.a2a89228.chunk.js","mappings":"6OAEe,SAASA,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SACnC,OACE,kBAAMC,SAAUD,EAAhB,WACE,4BACE,kBAAOE,KAAK,QAAQC,KAAK,YAE3B,mBAAQA,KAAK,SAAb,SAAsB,aAG3B,C,8BCNc,SAASC,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAASJ,EAAaO,IAAI,UAAY,IAAhE,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVF,EAAJ,CAEA,IAAMG,EAAO,mCAAG,6GAEWC,EAAAA,EAAAA,aAAuBJ,GAFlC,OAENK,EAFM,OAGZP,EAAUO,EAASC,KAAKC,SAHZ,uGAAH,qDAMbJ,GARwB,CASzB,GAAE,CAACH,IAYJ,OACE,4BACE,SAACf,EAAD,CAAYC,SAZC,SAAAsB,GACfA,EAAEC,iBACF,IAAMC,EAAWF,EAAEG,OAAOC,SAASZ,MAAMa,MAExB,KAAbH,GAAmBA,IAAaV,IAEpCC,EAASS,GACTjB,EAAgB,CAAEO,MAAOU,IAC1B,IAKIb,EAAOiB,OAAS,IACf,wBACGjB,EAAOkB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAM1B,GAAxC,SACGsB,EAAMK,SAHI,QAW1B,C","sources":["components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import React from 'react';\n\nexport default function SearchForm({ onSearch }) {\n  return (\n    <form onSubmit={onSearch}>\n      <label>\n        <input name=\"query\" type=\"text\" />\n      </label>\n      <button type=\"submit\">search</button>\n    </form>\n  );\n}\n","import SearchForm from 'components/SearchForm/SearchForm';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport moviesAPI from 'services/moviesAPI';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState(searchParams.get('query') || '');\n\n  useEffect(() => {\n    if (query === '') return;\n\n    const getData = async () => {\n      try {\n        const response = await moviesAPI.movieOnQuery(query);\n        setMovies(response.data.results);\n      } catch (error) {}\n    };\n    getData();\n  }, [query]);\n\n  const onSearch = e => {\n    e.preventDefault();\n    const newQuery = e.target.elements.query.value;\n\n    if (newQuery === '' || newQuery === query) return;\n\n    setQuery(newQuery);\n    setSearchParams({ query: newQuery });\n  };\n\n  return (\n    <div>\n      <SearchForm onSearch={onSearch} />\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(movie => (\n            <li>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n"],"names":["SearchForm","onSearch","onSubmit","name","type","Movies","useSearchParams","searchParams","setSearchParams","location","useLocation","useState","movies","setMovies","get","query","setQuery","useEffect","getData","moviesAPI","response","data","results","e","preventDefault","newQuery","target","elements","value","length","map","movie","to","id","state","from","title"],"sourceRoot":""}