{"version":3,"file":"static/js/515.37397304.chunk.js","mappings":"wPAUA,E,OARwBA,EAAAA,QAAH,0G,SCGN,SAASC,EAAT,GAAyC,IAAhBC,EAAe,EAAfA,YAC9BC,EAA6CD,EAA7CC,OAAQC,EAAqCF,EAArCE,MAAOC,EAA8BH,EAA9BG,YAAaC,EAAiBJ,EAAjBI,aACpC,OACE,UAAC,EAAD,WACGD,GACC,gBAAKE,IAAG,yCAAoCF,GAAeG,IAAI,MAE/D,SAAC,IAAD,CAAeC,MAAO,IAAKL,MAAM,eAEnC,4BACE,wBAAKA,KACL,0BACE,uBAAG,mBACFE,MAEH,4BACE,uBAAG,aACFH,GAAUA,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAAc,uBAAIA,GAAlB,YAK/B,C,uCCfc,SAASC,IAAY,IAAD,EACjC,GAAsCC,EAAAA,EAAAA,UAAS,CAAC,GAAhD,eAAOX,EAAP,KAAoBY,EAApB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOI,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,UAACH,EAASI,aAAV,aAAC,EAAgBC,OAExCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,WAAMC,GAAN,gGAEWC,EAAAA,EAAAA,oBAA8BD,GAFzC,OAENE,EAFM,OAGZnB,EAAemB,EAASC,MACxBlB,GAAa,GAJD,gDAMZE,EAAS,KAAMiB,SACfnB,GAAa,GAPD,yDAAH,sDAUbc,EAAQX,EACT,GAAE,CAACA,IAMJ,OACE,2BACGM,EAASW,UACR,oBAAQC,KAAK,SAASC,QAPb,WACbjB,EAASI,EAASW,QACnB,EAKK,UACG,IAAI,aAIRrB,GACC,SAAC,KAAD,IAEU,KAAVE,IAAgB,SAAChB,EAAD,CAAeC,YAAaA,IAEnC,KAAVe,IAAgB,uBAAIA,KACrB,gCACE,wBAAI,2BACJ,2BACE,yBACE,SAAC,KAAD,CAAMsB,GAAI,OAAV,SAAkB,YAEpB,yBACE,SAAC,KAAD,CAAMA,GAAI,UAAV,SAAqB,kBAGzB,SAAC,KAAD,SAIP,C","sources":["components/MainMovieInfo/MainMovieInfo.styled.js","components/MainMovieInfo/MainMovieInfo.jsx","pages/OneMovie.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nconst StyledMovieInfo = styled.section`\ndisplay: flex;\nwidth: fit-content;\ngap: 30px;\npadding: 15px;\nmargin: 0 auto;\n`\n\nexport default StyledMovieInfo;","import StyledNoImage from 'components/NoImage/NoImage.styled';\nimport React from 'react';\nimport StyledMovieInfo from './MainMovieInfo.styled';\nimport PropTypes from 'prop-types';\n\nexport default function MainMovieInfo({ movieInform }) {\n  const { genres, title, poster_path, vote_average } = movieInform;\n  return (\n    <StyledMovieInfo>\n      {poster_path ? (\n        <img src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt=\"\" />\n      ) : (\n        <StyledNoImage width={300} title=\"No Poster\" />\n      )}\n      <div>\n        <h1>{title}</h1>\n        <p>\n          <b>Average vote: </b>\n          {vote_average}\n        </p>\n        <div>\n          <b>Genres: </b>\n          {genres && genres.map(({ name }) => <p>{name}</p>)}\n        </div>\n      </div>\n    </StyledMovieInfo>\n  );\n}\n\nMainMovieInfo.propTypes = {\n  movieInform: PropTypes.object.isRequired,\n};\n","import MainMovieInfo from 'components/MainMovieInfo/MainMovieInfo';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { ColorRing } from 'react-loader-spinner';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport moviesAPI from 'services/moviesAPI';\n\nexport default function OneMovie() {\n  const [movieInform, setMovieInform] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const prevPath = useRef(location.state?.from);\n\n  useEffect(() => {\n    const getData = async id => {\n      try {\n        const response = await moviesAPI.oneMovieInformation(id);\n        setMovieInform(response.data);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setIsLoading(false);\n      }\n    };\n    getData(movieId);\n  }, [movieId]);\n\n  const goBack = () => {\n    navigate(prevPath.current);\n  };\n\n  return (\n    <div>\n      {prevPath.current && (\n        <button type=\"button\" onClick={goBack}>\n          {' '}\n          Go back\n        </button>\n      )}\n      {isLoading ? (\n        <ColorRing />\n      ) : (\n        error === '' && <MainMovieInfo movieInform={movieInform} />\n      )}\n      {error !== '' && <p>{error}</p>}\n      <section>\n        <h2>Aditional information</h2>\n        <ul>\n          <li>\n            <Link to={'cast'}>Cast</Link>\n          </li>\n          <li>\n            <Link to={'reviews'}>Reviews</Link>\n          </li>\n        </ul>\n        <Outlet />\n      </section>\n    </div>\n  );\n}\n"],"names":["styled","MainMovieInfo","movieInform","genres","title","poster_path","vote_average","src","alt","width","map","name","OneMovie","useState","setMovieInform","isLoading","setIsLoading","error","setError","movieId","useParams","navigate","useNavigate","location","useLocation","prevPath","useRef","state","from","useEffect","getData","id","moviesAPI","response","data","message","current","type","onClick","to"],"sourceRoot":""}